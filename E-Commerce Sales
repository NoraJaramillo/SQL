##This dataset downloaded from Kaggle, contains transaction details from an e-commerce business.
It includes sales, product, and purchase date information, making it useful for analyzing sales trends, customer behavior, and product performance.

The data spans from December 2010 to December 2011, so for practical purposes, the analysis is conducted as if it were January 1, 2012. 
This approach allows us to simulate real-world decision-making based on the latest available data.

This dataset will be used for data visualization in Tableau, where key insights on sales performance, customer segmentation, and product trends will be presented through interactive dashboards.

#Database Structure:
- InvoiceNo: Unique voice number for each transaction
- StockCode: Unique product identifier
- Description: Name of th product
- Quantity: Number of items purchased
- InvoiceDate: Date and time of the purchase
- UnitPrice: Price per unit of the product 
- CustomerID: Unique customer identifier
- Country: Country where the purchase was made

#1. Customer segmentation based on RFM Analysis
Identify customer groups based on Recency(last purchase date), Frequency(number of purchases), and Monetary value(total spend)
WITH gen_values AS(
SELECT MAX(DATE '2012-01-01' - DATE(invoicedate)) as max_days, MIN(DATE '2012-01-01' - DATE(invoicedate)) as min_days, 
	(SELECT MIN(purch_count) as min_purchases
	FROM(SELECT
		customerid, COUNT(invoiceno) as purch_count
		FROM
		sales_data
		WHERE customerid IS NOT NULL
   		GROUP BY customerid)),
	(SELECT MAX(purch_count) as max_purchases
	FROM(SELECT
		customerid, COUNT(invoiceno) as purch_count
		FROM
		sales_data
		WHERE customerid IS NOT NULL
   		GROUP BY customerid)),
	(SELECT MIN(tot_spend) as min_spend
	FROM(SELECT
		customerid, SUM(unitprice*quantity) as tot_spend
		FROM
		sales_data
		WHERE customerid IS NOT NULL
   		GROUP BY customerid)
	WHERE tot_spend > 0),
	(SELECT MAX(tot_spend) as max_spend
	FROM(SELECT
		customerid, SUM(unitprice*quantity) as tot_spend
		FROM
		sales_data
		WHERE customerid IS NOT NULL
   		GROUP BY customerid))
	FROM
	sales_data
	),
sales as(
SELECT 
  customerid, MIN(DATE '2012-01-01' - DATE(invoicedate)) AS Days_last_purch, COUNT(invoiceno) as Purchase_count, SUM(unitprice*quantity) as total_spend
FROM 
  sales_data
  WHERE customerid IS NOT NULL
  GROUP BY customerid
)
SELECT customerid, Recency , Frequency, Monetary, (r*100)+(f*10)+m as rfm
FROM(SELECT customerid, Days_last_purch AS Recency, ROUND(5 - ((Days_last_purch - min_days)*1.0/(max_days - min_days)*1.0)*4,0) as r, 
	 Purchase_count as Frequency, ROUND(1 + ((Purchase_count - min_purchases)*1.0/ (max_purchases - min_purchases)*1.0)*4,0) as f,
	 total_spend as Monetary, ROUND(1 + ((total_spend - min_spend)*1.0/(max_spend - min_spend)*1.0)*4,0) as m
	 FROM sales
	 CROSS JOIN gen_values)
ORDER BY 5 desc



