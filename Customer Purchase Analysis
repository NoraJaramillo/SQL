##This project utilizes customer and sales data to identify purchasing patterns and generate insights for better decision-making.

#Database Structure:
#Sales Tables:
The database contains multiple tables representing monthly sales data:

JanSales
FebSales
MarSales
AprSales
MaySales

Each of these tables has the following structure:

orderID (Primary Key) – Unique identifier for each sale
Product – Name or description of the product sold
Quantity – Number of units purchased
price – Price per unit
orderdate – Date when the purchase was made
location – Sales location

#Customer Table:

customers
order_id (Foreign Key) – Links sales to customers
acctnum – Customer account number

#Objective:
This analysis helps understand customer purchasing behavior, detect trends, and generate data-driven recommendations for business improvement. 
By analyzing sales transactions across multiple months and linking them to customers, we can derive insights on product demand, customer preferences, seasonal trends, and regional sales performance.

#1.Top-Selling Products of the Year:
Determine which products had the highest sales volume during the year.

SELECT product, SUM(Quantity) AS Total
FROM (
SELECT product, Quantity
FROM JanSales
UNION ALL
SELECT product, Quantity
FROM FebSales
UNION ALL
SELECT product, Quantity
FROM MarSales
UNION ALL
SELECT product, Quantity
FROM AprSales
UNION ALL
SELECT product, Quantity
FROM MaySales
)
GROUP BY product
ORDER BY 2 DESC

#The analysis reveals that batteries and chargers are the top-selling products, which can be attributed to their relatively lower price points and limited lifespan compared to higher-ticket items like smartphones or AirPods. 
Consumers often purchase these essential accessories more frequently, driven by their short-term usage and need for replacement.
This finding highlights the importance of focusing on these frequently bought products as part of a broader strategy for consistent sales performance.

#2.Sales Trends Over Time:
Analyze monthly sales trends to identify high and low-performing periods, helping understand seasonal fluctuations and demand.

WITH revenue AS (
SELECT DISTINCT month,  Sum(Quantity) OVER(PARTITION BY month) as Sales_month, Mo_No, Sum(Quantity*price) OVER(PARTITION BY month) as Revenue
FROM (
SELECT *, 'January' as Month, '1' as Mo_No
FROM JanSales
UNION ALL
SELECT *, 'February' as Month, '2' as Mo_No
FROM FebSales
UNION ALL
SELECT *, 'March' as Month, '3' as Mo_No
FROM MarSales
UNION ALL
SELECT *, 'April' as Month, '4' as Mo_No
FROM AprSales
UNION ALL
SELECT *, 'May' as Month, '5' as Mo_No
FROM MaySales
)
ORDER BY Mo_No
)

SELECT month, Sales_month, revenue, round((revenue - LAG(revenue,1,0) OVER(ORDER BY Mo_No))/ (LAG(revenue,1,0) OVER(ORDER BY Mo_No)) *100,1) as Perc_Monthly_Growth_Decline
FROM revenue 

#Sales demonstrated steady growth from January to April, peaking in March, which highlights strong demand during the first quarter. 
However, the decline in May suggests potential seasonal effects or areas where strategic adjustments may be needed to sustain performance in the future.

#3. Revenue by City:
Analyze total revenue generated in each city to identify high-perfoming locations and optimize resource allocation for future growth strategies.

WITH totalsales AS(
SELECT *,'January' as Month, '1' as Mo_No
FROM JanSales
UNION ALL
SELECT *,'February' as Month, '2' as Mo_No
FROM FebSales
UNION ALL
SELECT *,'March' as Month, '3' as Mo_No
FROM MarSales
UNION ALL
SELECT *,'April' as Month, '4' as Mo_No
FROM AprSales
UNION ALL
SELECT *,'May' as Month, '5' as Mo_No
FROM MaySales
),
location AS(
SELECT *, TRIM(SUBSTR(location, 1, INSTR(location, ',') - 1)) as street,  SUBSTR(location, INSTR(location, ',') + 1, INSTR(SUBSTR(location, INSTR(location, ',') + 1), ',') - 1) AS City, TRIM(SUBSTR(location, INSTR(location, ',') + INSTR(SUBSTR(location, INSTR(location, ',') + 1), ',') + 1)) AS state_zip
FROM totalsales
)

SELECT distinct City,  Sum(Quantity) OVER(PARTITION BY city) as Sales_by_city, Sum(Quantity*price) OVER(PARTITION BY city) as Revenue
FROM location
ORDER BY 3 DESC

#As we can imagine, due to their size and economic influence, certain cities naturally generates higher revenue. 
The top three: San Francisco, Los Angeles and New York City. Stand out due to ther high population density, strong econominc activity, and diverse consumer base. 
Based on the results we will now analize the top three best-selling products in these cities.

#4. Top-Selling Products in Leading Cities:
Identify the three bestselling products in the top three revenue-generating cities to understand regional consumer preferences and optimize inventory distribution based on local demands trends.

WITH totalsales AS(
SELECT *,'January' as Month, '1' as Mo_No
FROM JanSales
UNION ALL
SELECT *,'February' as Month, '2' as Mo_No
FROM FebSales
UNION ALL
SELECT *,'March' as Month, '3' as Mo_No
FROM MarSales
UNION ALL
SELECT *,'April' as Month, '4' as Mo_No
FROM AprSales
UNION ALL
SELECT *,'May' as Month, '5' as Mo_No
FROM MaySales
),
location AS(
SELECT *, TRIM(SUBSTR(location, 1, INSTR(location, ',') - 1)) as street,  SUBSTR(location, INSTR(location, ',') + 1, INSTR(SUBSTR(location, INSTR(location, ',') + 1), ',') - 1) AS City, TRIM(SUBSTR(location, INSTR(location, ',') + INSTR(SUBSTR(location, INSTR(location, ',') + 1), ',') + 1)) AS state_zip
FROM totalsales
),
Sales_detailed AS(
SELECT distinct City, Product, Sum(Quantity) OVER(PARTITION BY City,Product) as Sales_by_city
FROM location
order by 1
)

SELECT City, Product, Sales_by_City
FROM(SELECT City, Product, Sales_by_City, RANK() OVER(PARTITION BY City ORDER BY Sales_by_city DESC) as rank
    FROM Sales_detailed
    WHERE City like '%los Angeles%' OR City like '%San Francisco%' OR City like '%New York City%')
WHERE rank < 4
ORDER BY 3 DESC

#This finding confirms the previous analysis, where we observed that batteries and chargers were the top-selling products overall. 
Based on these insights, businesses could focus on maintaining high stock levels for these essential products and explore targeted promotions to further capitalize on their demand.












